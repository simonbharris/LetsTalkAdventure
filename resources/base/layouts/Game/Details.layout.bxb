layout-macro-def (game-details) {
  params {
    param (game) {
      type (Game)
      min (Required) max (One)
    }
  }
  content {
    section {
      content {
        single-line {
          text {
            value (Data provided by IGDB)
            style (Detail_M_Soft)
          }
        }
        image-card {
          image-object-fit (Contain)
          aspect-ratio(3:4)
          image-url("https://images.igdb.com/igdb/image/upload/t_cover_big/[#{value(game.cover.image_id)}].jpg")
          title-area {
            slot1 {
              text {
                value ("")
              }
            }
          }
        }
        title-area {
          halign (Center)
          slot1 {
            text {
              value("#{value(game.name)}")
              style(Title_L)
            }
          }
          slot2 {
            single-line {
              text {
                value ("Rated: #{number(game.total_rating, '#,##0.0')} â€¢ Release: #{value(game.release_date)}")
                style (Title_XS)
              }
            }
          }
        }
        paragraph {
          value ("#{value(game.summary)}")
          style(Detail_M)
        }
        divider
        single-line {
          text {
            value("Platforms")
            style (Detail_M)
          }
        }
        for-each (game.platforms) {
          as (platform) {
            single-line {
              text {
                value ("#{value(platform.name)}")
                style (Detail_M_Soft)
              }
            }
          }
        }
        
        divider
        single-line {
          text {
            value("Genres")
            style (Detail_M)
          }
        }
        for-each (game.genres) {
          as (genre) {
            single-line {
              text {
                value ("#{value(genre.name)}")
                style (Detail_M_Soft)
              }
            }
          }
        }
                
        divider
        single-line {
          text {
            value("Themes")
            style (Detail_M)
          }
        }
        for-each (game.themes) {
          as (theme) {
            single-line {
              text {
                value ("#{value(theme.name)}")
                style (Detail_M_Soft)
              }
            }
          }
        }
        divider
        single-line {
          text {
            value("Dig deeper at")
            style (Title_S)
          }
        }
        if (exists(game.url)) { // IGDB
          cell-card {
            slot1 {
              image {
                shape (Circle)
                url (https://cdn.discordapp.com/attachments/567608389622956042/567610246638469122/IGDB-icon.png)
              }
            }
            slot2 {
              content {
                primary (IGDB)
                secondary (Rate, review, and more info)
              }
            }
            on-click {
              intent {
                goal: UriRedirect
                value: UriRedirect {
                  url {$expr(game.url)}
                }
              }
            }
          }
        }
        divider
        if(size(game.external_games) > 0) {
          single-line {
            text {
              value("Links")
              style (Detail_M)
            }
          }
        }
        //            BUTTTONNSSSS YEEEAAAHHH!!! (Modularize this later)
        for-each (game.external_games) { // <--- Not fully implemented. Neet better EL or URI constructor.
          as (item) {
            switch (item.category) {
              case (1) { // Steam
                layout-macro (UriButton) {
                  param (url) {
                    literal (https://store.steampowered.com/) // <-- Update later with something better
                  }
                  param (image) { // <-- Should probably change where these are hosted and not abuse discord. xD
                    literal (https://cdn.discordapp.com/attachments/354331388142419988/567499944391344158/unknown.png)
                  }
                  param (name) {
                    literal ("Steam")
                  }
                }
              }
              case (5) { // gog
                layout-macro (UriButton) {
                  param (url) {expression (item.url)}
                  param (image) {literal (https://cdn.discordapp.com/attachments/354331388142419988/567524893340729364/Screen_Shot_2019-04-15_at_6.41.04_PM.png)}
                  param (name) {literal (gog)}
                }
              }
              case (10) { // Gaming youtube?
                layout-macro (UriButton) {
                  param (url) {expression (item.url)}
                  param (image) {literal (https://www.flaticon.com/premium-icon/icons/svg/720/720300.svg)}
                  param (name) {literal ("YouTube")}
                }
              }
              case (14) { // Twitch
                layout-macro (UriButton) { // URL needs updating to something tailored.
                  param (url) {literal ("https://www.twitch.tv/directory/game/")} 
                  param (image) {literal (http://icons.iconarchive.com/icons/papirus-team/papirus-apps/256/gnome-twitch-icon.png)}
                  param (name) {literal ("Twitch")}
                }
              }
              case (15) { // Android
                layout-macro (UriButton) {
                  param (url) {expression (item.url)}
                  param (image) {literal (https://cdn.discordapp.com/attachments/354331388142419988/567524300610076703/unknown.png)}
                  param (name) {literal ("Android")}
                }
              }
            }
          }
        }
      }
    }
  }
}